@model IEnumerable<Application.Catalogs.CatalogTypes.Dto.CatalogTypeCategoriMenu>

@functions
{
    void RenderCategoryRow(long? parentId, int level, int loopCount)
    {
        var cclass = "";
        if (level == 0) cclass = "menu_item_children";// for li

        if (level == 1) cclass = "categories_mega_menu";//for  ul

        if (level == 2) cclass = "categorie_sub_menu";//for  ul


        foreach (var item in Model.Where(p => p.ParentCatalogTypeId == parentId))
        {

            if (!Model.Any(p => p.ParentCatalogTypeId == item.Id))
            {

                if (level == 0)
                {
                    <li>
                        @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })
                    </li>
                }
                if (level == 1)
                {

                    if (loopCount > 0)
                    {
                        <li class="menu_item_children">
                            @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })

                        </li>
                    }
                    else
                    {
                        <ul class="categories_mega_menu column_1">
                            <li class="menu_item_children">
                                @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })
                            </li>
                        </ul>
                    }

                }
                if (level == 2)
                {

                    if (loopCount > 0)
                    {
                        <li class="menu_item_children">
                           
                            @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })
                        </li>
                    }
                    else
                    {
                        <ul class="categorie_sub_menu">
                            <li>
                                @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })
                            </li>

                        </ul>
                    }

                }
            }
            //دارای فرزند می باشد
            else
            {


                if (level == 0)
                {

                    <ul>
                        <li class="menu_item_children">
                            @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })
                        </li>
                        <ul class="categories_mega_menu">
                            @{RenderCategoryRow(item.Id, level + 1, loopCount + 1);}
                        </ul>
                    </ul>
                }
                if (level == 1)
                {

                    <ul class="categories_mega_menu">
                        <li class="menu_item_children">
                            @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })
                        </li>
                        @{RenderCategoryRow(item.Id, level + 1, loopCount + 1);}
                    </ul>
                }
                if (level == 2)
                {

                    <ul class="categorie_sub_menu">
                        <li>

                            @Html.ActionLink(item.Type, "index", "Product", new { CatalogTypeId = item.Id })
                        </li>
                        @{RenderCategoryRow(item.Id, level + 1, loopCount + 1);}
                    </ul>
                }

            }


        }
    }
}
<ul>

    @{
        RenderCategoryRow(null, 0, 0);
    }

</ul>


